% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/plot_spict_scenarios_by_model_NEW499_WITH_KOBE.R
\name{plot_spict_scenarios_by_model_NEW499_WITH_KOBE}
\alias{plot_spict_scenarios_by_model_NEW499_WITH_KOBE}
\title{Plot SPiCT Model Scenarios (3×2) with Kobe panel (OSA path; no scenario overlays)}
\usage{
plot_spict_scenarios_by_model_NEW499_WITH_KOBE(
  models,
  production_fun = NULL,
  extract_catch_data = NULL,
  scenario_colors = NULL,
  return_patchwork = TRUE,
  lindwd = 0.8,
  show_CIs = TRUE
)
}
\arguments{
\item{models}{A \strong{named list} of fitted SPiCT objects (\code{spictcls}), one per
scenario/model. Names are used in legends and color mapping.}

\item{production_fun}{Deprecated; kept for backward compatibility (ignored).}

\item{extract_catch_data}{Optional function to extract \strong{observed} and
\strong{predicted} catch time series for each model. Must return columns
\verb{time, catch, lwr, upr, catch_type, scenario}.}

\item{scenario_colors}{Optional \strong{named} vector of colors keyed by model names.
If \code{NULL}, an internal default palette is used (requires names to match).}

\item{return_patchwork}{Logical; if \code{TRUE} (default) returns a \strong{patchwork}
object. If \code{FALSE}, returns a \strong{list} with elements
\verb{biomass, bbmsy, catch, f, ffmsy, kobe}.}

\item{lindwd}{Kept for compatibility (unused).}

\item{show_CIs}{Logical; if \code{TRUE} (default) draws \strong{dotted} CI bounds.}
}
\value{
Either a \strong{patchwork} object (default) or a named \strong{list} of six
\code{ggplot} panels (when \code{return_patchwork = FALSE}).
}
\description{
Produces a 3×2 \strong{patchwork} of SPiCT time series and a Kobe panel for a
\strong{named list} of fitted models (e.g., scenarios). Panels are:
\strong{Biomass (with observed indices scaled by \eqn{\hat q})}, \strong{B/B\eqn{_{\mathrm{MSY}}}},
\strong{Catch} (SPiCT last-observation convention), \strong{F}, \strong{F/F\eqn{_{\mathrm{MSY}}}}, and \strong{Kobe}.
Confidence intervals are drawn as \strong{dotted bounds} (if enabled). Thin \strong{solid grey}
vertical lines mark the end of observed data (non-catch panels) and the SPiCT
\strong{catch} convention on the catch panel.
}
\details{
\strong{Kobe panel} is built via \code{kobe_all_in_one_gg.EE()} using the \strong{first} model in
\code{models}. Any \verb{$man} element is removed to \strong{suppress scenario overlays} so the
\strong{OSA} path and \strong{E(B∞)} segment are visible; the \strong{final-year white square}
is preserved. The panel’s mini-legend is replaced with an
\strong{Original_kobe_all_in_gg()}-style legend using
\code{.add_kobe_original_mini_legend()}.

Colors:
\itemize{
\item If \code{scenario_colors} is \code{NULL}, a stable default palette is selected. For
non-matching model names, provide your own \code{scenario_colors}.
}

Catch panel:
\itemize{
\item If \code{extract_catch_data} is provided, it must return a data frame with the
columns \verb{time, catch, lwr, upr, catch_type} (values \code{"Observed"}/\code{"Predicted"}),
and \code{scenario} (the model name).
}
}
\section{Vertical reference lines}{

\itemize{
\item Non-catch panels: an overall end-of-observation vertical line is computed
across models from \code{inp$timerangeObs} (or fallbacks).
\item Catch panel: an end-of-observed-catch line follows SPiCT’s convention,
using the last \strong{integer} time (\code{dtc < 1}) if seasonal.
}
}

\examples{
\dontrun{
  # models <- list(S1P = m_S1P, S1S = m_S1S, S1F = m_S1F)  # each a spictcls
  p <- plot_spict_scenarios_by_model_NEW499_WITH_KOBE(
         models,
         extract_catch_data = elu_extract_catch_data_spict,
         show_CIs = TRUE
       )
  p  # patchwork

  # Or retrieve the individual panels:
  panels <- plot_spict_scenarios_by_model_NEW499_WITH_KOBE(
              models,
              extract_catch_data = elu_extract_catch_data_spict,
              return_patchwork = FALSE
            )
  panels$kobe
}

}
\seealso{
\code{\link[=kobe_all_in_one_gg.EE]{kobe_all_in_one_gg.EE()}}, \code{\link[=.add_kobe_original_mini_legend]{.add_kobe_original_mini_legend()}}
}
