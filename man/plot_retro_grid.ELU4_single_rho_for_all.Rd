% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_retro_grid.ELU4_single_rho_for_all.R
\encoding{UTF-8}
\name{plot_retro_grid.ELU4_single_rho_for_all}
\alias{plot_retro_grid.ELU4_single_rho_for_all}
\title{Plot retrospective grids (2×2) with Mohn's rho for B, F, B/Bmsy, F/Fmsy}
\usage{
plot_retro_grid.ELU4_single_rho_for_all(
  models,
  width = 8,
  height = 5,
  dpi = 400,
  output_dir = NULL
)
}
\arguments{
\item{models}{Named list of fitted \strong{SPiCT} models (class \code{spictcls}), each
with a \verb{$retro} element as produced by \code{retro()}. Names are used for plot
titles and output filenames.}

\item{width, height}{Numeric. Figure width and height in inches for exported
PNGs. Defaults: \code{width = 8}, \code{height = 5}.}

\item{dpi}{Numeric. Resolution for exported PNGs. Default: \code{400}.}

\item{output_dir}{Character or \code{NULL}. If non-\code{NULL}, directory where PNGs
are written (created recursively if it does not exist). If \code{NULL}, plots are
not written to disk and are only returned.}
}
\value{
(Invisibly) a named list of \strong{patchwork} plot objects (one per model). If
\code{output_dir} is provided, PNG files are also written to disk.
}
\description{
For each fitted \strong{SPiCT} model in a named list, generate a 2×2 retrospective
grid showing:
\itemize{
\item \strong{Top-left:} Biomass \emph{B\link{t}} (with 95\% CI ribbons),
\item \strong{Top-right:} Fishing mortality \emph{F\link{t}},
\item \strong{Bottom-left:} Relative biomass \emph{B\link{t}/B\emph{MSY}},
\item \strong{Bottom-right:} Relative fishing mortality \emph{F\link{t}/F\emph{MSY}}.
}

Each panel overlays the \strong{baseline} and \strong{peel} runs from \code{retro()} and
annotates \strong{Mohn’s ρ} for its corresponding quantity (B, F, B/Bmsy, F/Fmsy)
when available (annotation is omitted if the value is \code{NA}). Peel ordering is
standardized as \code{"All"} (baseline) followed by numeric peels in \strong{descending}
order (e.g., \verb{-5, -4, …, -1}), then any non-numeric peel names.
}
\details{
This function expects each element of \code{models} to be a fitted \strong{SPiCT} object
(class \code{spictcls}) that already contains a \code{retro} component produced by
\code{retro()}. Mohn’s rho is computed via \code{mohns_rho()} for the four quantities
and displayed in each respective panel. Quantity names are resolved robustly:
for example, \emph{F} falls back from \code{"logFnotS"} to \code{"logF"} if needed, and
\emph{F/Fmsy} from \code{"logFFmsynotS"} to \code{"logFFmsy"}.

If \code{output_dir} is provided, each model’s figure is saved as a PNG named
\code{"retrospective_<model_name>.png"}. Otherwise, the function returns the plots
invisibly for further composition/export.

The function relies on a user-provided \code{theme_minimal_compact()} and
\code{make_peel_subtitle()} (not defined here). Make sure these helpers exist in
your package namespace.
}
\section{Panels}{

\itemize{
\item \strong{B\link{t}} (biomass) with CI ribbon and Mohn’s ρ\eqn{(B)}.
\item \strong{F\link{t}} (fishing mortality) with CI ribbon and Mohn’s ρ\eqn{(F)}.
\item \strong{B\link{t}/B\emph{MSY}} with CI ribbon and Mohn’s ρ\eqn{(B/B_{MSY})}.
\item \strong{F\link{t}/F\emph{MSY}} with CI ribbon and Mohn’s ρ\eqn{(F/F_{MSY})}.
}
}

\examples{
\dontrun{
library(spict)
data(pol)
rep <- fit.spict(pol$albacore)
rep <- retro(rep, nretroyear = 5)

# Suppose you have a named list of models with $retro present:
models <- list(S1P.SDM = rep)

# Just build the plots (not saved):
out <- plot_retro_grid.ELU4_single_rho_for_all(models)

# Or save each model’s figure to FIG/retro:
dir.create("FIG/retro", recursive = TRUE, showWarnings = FALSE)
plot_retro_grid.ELU4_single_rho_for_all(models, output_dir = "FIG/retro")
}

}
\seealso{
\code{\link[=retro]{retro()}}, \code{\link[=mohns_rho]{mohns_rho()}}, \code{\link[=get.par]{get.par()}}, \code{\link[=list.quantities]{list.quantities()}},
\strong{patchwork}::\code{\link[patchwork:plot_annotation]{patchwork::plot_annotation()}}, \strong{ggtext}::\code{\link[ggtext:element_markdown]{ggtext::element_markdown()}}
}
